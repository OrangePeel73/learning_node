
1、其他数据类型转为Boolean
	Boolean（）函数
		String：
			非空字符串（空格也算）：true；
			“”：false；
		Number：
			任何非0；true；
			0/NaN：false；
		Undefined：
			undefined：false；
		Object：
			任何对象：true；
		null：false；

	
2、其他数据类型转为String
	toString（）函数：
		除了null、undefined，其他三种数据类型的变量都有一个toString（）函数
		Number：默认以十进制格式返回数值的字符串表示，
				通过传递参数可以输入2、8、16进制乃至任意有效进制格式的字符串。
				
				其他数字（包含浮点，正负数）:都会转为字符串显示
				数字与字母组合：报错；
				数值+数值：求和后转为字符串
				数值+字母：报错
				数值字母：报错
				String（null）：null
				String（undefined）：undefined
				String（true）：true
				String（false）：false
				String（“”）：无显示
				String（“ ”）：无显示	
				
		
	
3、其他数据类型转为Number
	1》Number（）函数：
		null：0
		Boolean：
			true：1
			false：0
		undefined：NaN
		String：
			字符串中包含有字母时：NaN
			字符串中只有以十六进制形式表示：转为对应的十进制
			字符串中只有以八进制形式表示：不会转为对应的十进制，而是忽略前导0：“055”--55
			字符串中为整数或者浮点数的小数不为0结尾；对应数值
			字符串中以0开头数字：去掉0的对应数值
			字符串中只有数字：
				正负整数和浮点数且尾数都不为0：对应数值
				正负整数和浮点数前导为0；去掉0输出对应值
				正负整数和浮点数尾数为0；去掉0输出对应值
				数值前有+、-号：根据+、-号输出对应值
				其他地方出现+-号：NaN
				
		 str=null;//0
		 str=undefined ;  //NaN   
		 str=false;//0
		 str=true;//1
		 
		 str="hello";//NaN
		 str="0xa";//10
		 str="0xabg";//10
		 str="055";55
		 str="10";//10
		 str="10.0";//10
		 str="10.2";//10.2
		 str="010";//10
		 str="-10";//-10
		 str="-10.0";//-10
		 str="+10";//10
		 str="+10.30";//10.3
		 str="10+";//NaN   
		 str="10-";//NaN   
		 str="102+2";//NaN   
		 str="-1023.20";//-1023.2
	
	2》parseInt（）函数
			null：NaN
		boolean:NaN
		Undefined：:NaN
		number:
			0开头：看做八进制形式，以十进制输出对应数值
			0结尾：去掉0输出对应数值
			十六进制：转为对应十进制数值
			正负数，浮点数：整数值
			数值前有+、-号：输出对应值
			+、-在其他位置会报错；
			数字与字母组合：报错
		String：
			"":NaN;
			" ":NaN
			"helo":NaN
			
			
			"123+":123
			"123-":123
			"+123":123
			"-123":123
			字符串都为字母或者空字符串：NaN
			字符串数字开头，后面的无论何类型：输出数字值 ；"123nhg":123
				  字母开头，后面的无论何类型：NaN;         "hello123":NaN
			字符串中+、-在数字前：输出对应数值，+号去掉，-号保留
			字符串中+、-在数字后：输出对应数值，+号-号都要去掉
			字符串中以0开头数字：去掉0的对应数值
			字符串中以0开头结尾：去掉0的对应数值
			字符串中为整数不为0结尾；对应数值
			字符串中为浮点数：全部输出整数。
			字符串中只有以八进制形式表示：不会转为对应的十进制，而是忽略前导0：“055”--55
			字符串中只有以十六进制形式表示：转为对应的十进制；
		
	
	
	
	3》parseFloat（）函数
		null：NaN
		boolean:NaN
		Undefined：:NaN
		number:
			0开头：看做八进制形式，以十进制输出对应数值
			0结尾：去掉0输出对应数值
			十六进制：转为对应十进制数值
			正负数，浮点数：对应数值
			数字与字母组合：报错
			数值前有+、-号：输出对应值
			+、-在其他位置会报错；
		String：
			"":NaN;
			" ":NaN
			"helo":NaN
			
			
			"123+":123
			"123-":123
			"+123":123
			"-123":123
			字符串都为字母或者空字符串：NaN
			字符串数字开头，后面的无论何类型：输出数字值 ；"123nhg":123
				  字母开头，后面的无论何类型：NaN;         "hello123":NaN
			字符串中+、-在数字前：输出对应数值，+号去掉，-号保留
			字符串中+、-在数字后：输出对应数值，+号-号都要去掉
			字符串中以0开头数字：去掉0的对应数值
			字符串中为整数或者浮点数的小数不为0结尾；对应数值
			字符串中只有以八进制形式表示：不会转为对应的十进制，而是忽略前导0：“055”--55
			字符串中只有以十六进制形式表示：不会转为对应的十进制；
		
4、逻辑运算符
	1》&& 且
		1>第一个数为null、undefined、false、NaN、“”：返回该值
		2>第一个数为其他：返回第二个数 
		3>两个都为number：返回第二个
		
	2》|| 或
		1>两个数为null、undefined、false、NaN、“”：返回该数值
		2>第一个数为null、undefined、false、NaN、“”：返回第二个数值
		3>两个都为number：返回第一个
	3》！非
		返回布尔值
		现将任意类型转为Boolean，再取反。
		连续两次逻辑非，就可返回Boolean类型
		1>null、undefined、false、NaN、“”都为false，逻辑非为true
		
		
		
			
			
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
